{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\React-project\\\\react-country-app\\\\src\\\\Component\\\\Country.js\";\nimport React from 'react';\nimport { Row, Col, Card, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Country = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: props.data.map(data => {\n        console.log(data.name.common);\n        const {\n          name,\n          flags,\n          capital,\n          area,\n          population\n        } = data;\n        return /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: '18rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: flags.png\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                children: name.common\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n              className: \"list-group-flush\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {\n                children: [\"Population : \", population]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n                children: [\"Capital : \", capital]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n                children: [\"Area : \", area]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Link, {\n                href: \"#\",\n                children: \"Card Link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n                href: \"#\",\n                children: \"Another Link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Country;\nexport default Country;\n\nvar _c;\n\n$RefreshReg$(_c, \"Country\");","map":{"version":3,"names":["React","Row","Col","Card","ListGroup","ListGroupItem","Country","props","data","map","console","log","name","common","flags","capital","area","population","width","png"],"sources":["C:/Users/Asus/Desktop/React-project/react-country-app/src/Component/Country.js"],"sourcesContent":["import React from 'react'\r\n\r\nimport { Row, Col, Card, ListGroup, ListGroupItem } from 'react-bootstrap';\r\nconst Country = (props) => {\r\n    return (\r\n        <div>\r\n            <Row>\r\n                {\r\n                    props.data.map((data) => {\r\n                        console.log(data.name.common);\r\n                        const { name, flags, capital, area, population } = data;\r\n                        return (\r\n                            <Col>\r\n\r\n                                <Card style={{ width: '18rem' }}>\r\n                                    <Card.Img variant=\"top\" src={flags.png} />\r\n                                    <Card.Body>\r\n                                        <Card.Title>{name.common}</Card.Title>\r\n                                    </Card.Body>\r\n                                    <ListGroup className=\"list-group-flush\">\r\n                                        <ListGroupItem>Population : {population}</ListGroupItem>\r\n                                        <ListGroupItem>Capital : {capital}</ListGroupItem>\r\n                                        <ListGroupItem>Area : {area}</ListGroupItem>\r\n                                    </ListGroup>\r\n                                    <Card.Body>\r\n                                        <Card.Link href=\"#\">Card Link</Card.Link>\r\n                                        <Card.Link href=\"#\">Another Link</Card.Link>\r\n                                    </Card.Body>\r\n                                </Card>\r\n\r\n                            </Col>\r\n                        );\r\n                    })\r\n                }\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Country"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,SAAzB,EAAoCC,aAApC,QAAyD,iBAAzD;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EACvB,oBACI;IAAA,uBACI,QAAC,GAAD;MAAA,UAEQA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAgBD,IAAD,IAAU;QACrBE,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,IAAL,CAAUC,MAAtB;QACA,MAAM;UAAED,IAAF;UAAQE,KAAR;UAAeC,OAAf;UAAwBC,IAAxB;UAA8BC;QAA9B,IAA6CT,IAAnD;QACA,oBACI,QAAC,GAAD;UAAA,uBAEI,QAAC,IAAD;YAAM,KAAK,EAAE;cAAEU,KAAK,EAAE;YAAT,CAAb;YAAA,wBACI,QAAC,IAAD,CAAM,GAAN;cAAU,OAAO,EAAC,KAAlB;cAAwB,GAAG,EAAEJ,KAAK,CAACK;YAAnC;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI,QAAC,IAAD,CAAM,IAAN;cAAA,uBACI,QAAC,IAAD,CAAM,KAAN;gBAAA,UAAaP,IAAI,CAACC;cAAlB;gBAAA;gBAAA;gBAAA;cAAA;YADJ;cAAA;cAAA;cAAA;YAAA,QAFJ,eAKI,QAAC,SAAD;cAAW,SAAS,EAAC,kBAArB;cAAA,wBACI,QAAC,aAAD;gBAAA,4BAA6BI,UAA7B;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI,QAAC,aAAD;gBAAA,yBAA0BF,OAA1B;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFJ,eAGI,QAAC,aAAD;gBAAA,sBAAuBC,IAAvB;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAHJ;YAAA;cAAA;cAAA;cAAA;YAAA,QALJ,eAUI,QAAC,IAAD,CAAM,IAAN;cAAA,wBACI,QAAC,IAAD,CAAM,IAAN;gBAAW,IAAI,EAAC,GAAhB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI,QAAC,IAAD,CAAM,IAAN;gBAAW,IAAI,EAAC,GAAhB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFJ;YAAA;cAAA;cAAA;cAAA;YAAA,QAVJ;UAAA;YAAA;YAAA;YAAA;UAAA;QAFJ;UAAA;UAAA;UAAA;QAAA,QADJ;MAqBH,CAxBD;IAFR;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAkCH,CAnCD;;KAAMV,O;AAqCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}